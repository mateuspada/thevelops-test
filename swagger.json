{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Thevelops Test API",
    "description": "This is an API made as a interview test"
  },
  "host": "localhost:4000/api",
  "basePath": "",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400":{
            "description": "Bad Request - There is something missing in request"            
          },
          "500":{
            "description": "Internal Server Error - Some problem server side."
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "JWT authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "401":{
            "description": "Unauthorized - missing authorization"
          },
          "422":{
            "description": "Unprocessable Entity - Token is incorrect"
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "authorization",
          "in": "header",
          "description": "JWT authorization",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/UserSucess"
            }
          },
          "401":{
            "description": "Unauthorized - missing authorization"
          },
          "403":{
            "description": "Forbidden - token user doesn't match with request user"
          },
          "404":{
            "description": "Not Found - User not found"
          },
          "422":{
            "description": "Unprocessable Entity - Token is incorrect"
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "204": {
            "description": "No Content - User deleted"
          },
          "401":{
            "description": "Unauthorized - missing authorization"
          },
          "403":{
            "description": "Forbidden - token user doesn't match with request user"
          },
          "422":{
            "description": "Unprocessable Entity - Token is incorrect"
          },
          "500":{
            "description": "Internal Server Error - Some problem server side."
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/UserPUT"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - User is updated",
            "schema": {
              "$ref": "#/definitions/UserSucess"
            }
          },
          "400":{
            "description": "Bad Request - There is something missing in request"            
          },
          "401":{
            "description": "Unauthorized - missing authorization"
          },
          "403":{
            "description": "Forbidden - token user doesn't match with request user"
          },
          "422":{
            "description": "Unprocessable Entity - Token is incorrect"
          },
          "500":{
            "description": "Internal Server Error - Some problem server side."
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "_id",
        "email",
        "first_name",
        "last_name",
        "password"        
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true,
          "example": 1
        },
        "email": {
          "type": "string",
          "uniqueItems": true,
          "example": "mateuspada@live.com"
        },
        "first_name": {
          "type": "string",
          "minLength": 3,
          "example": "Mateus"
        },
        "last_name": {
          "type": "string",
          "minLength": 3,
          "example": "Spada Leme"

        },
        "personal_phone": {
          "type": "string",
          "example":"(17) 99223-7204"
        },
        "password":{
          "type":"string",
          "minLength": 3,
          "maxLength": 20,
          "example": "12345678"
        } 
      }
    },
    "UserPUT": {
      "required": [
        "email",
        "first_name",
        "last_name",
        "password"        
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true,
          "example": "mateuspada@live.com"
        },
        "first_name": {
          "type": "string",
          "minLength": 3,
          "example": "Mateus"
        },
        "last_name": {
          "type": "string",
          "minLength": 3,
          "example": "Spada Leme"

        },
        "personal_phone": {
          "type": "string",
          "example":"(17) 99223-7204"
        },
        "password":{
          "type":"string",
          "minLength": 3,
          "maxLength": 20,
          "example": "12345678"
        } 
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserSucess"
      }
    },
    "UserSucess": {
      "required": [
        "_id",
        "email",
        "first_name",
        "last_name"       
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true,
          "example": 1
        },
        "email": {
          "type": "string",
          "uniqueItems": true,
          "example": "mateuspada@live.com"
        },
        "first_name": {
          "type": "string",
          "minLength": 3,
          "example": "Mateus"
        },
        "last_name": {
          "type": "string",
          "minLength": 3,
          "example": "Spada Leme"

        },
        "personal_phone": {
          "type": "string",
          "example":"(17) 99223-7204"
        }
      }
    }    
  }
}
